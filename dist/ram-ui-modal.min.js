angular.module("ram.ui.modal",["ram.ui.modal.service","ram.ui.modal.directive","ui.bootstrap"]),function(){var link=function(scope,element,attrs){var dialogProvider=element.injector().get("DialogsService"),templateFile=attrs.ramModal,controller=attrs.modalController;scope.dialogModel={header:"Notification Settings"},element.bind("click",function(){scope.onLoadModalAction&&scope.$eval(scope.onLoadModalAction);var dialog=dialogProvider.create(templateFile,controller,scope.dialogModel);dialog.result.then(function(){scope.postSubmitAction&&scope.$eval(scope.postSubmitAction)},function(){scope.postCancelAction&&scope.$eval(scope.postCancelAction)})})},ramModal=function(){return{restrict:"A",link:link,scope:{postSubmitAction:"&",postCancelAction:"&",onLoadModalAction:"&"}}};angular.module("ram.ui.modal.directive",["ram.ui.modal.service"]).directive("ramModal",ramModal)}(),angular.module("ram.ui.modal.service",["ui.bootstrap"]).provider("DialogService",[function(){var b=!0,k=!0,w="modal-dialog",copy=!0;this.useBackdrop=function(val){angular.isDefined(val)&&(b=val)},this.useEscClose=function(val){angular.isDefined(val)&&(k=angular.equals(val,0)||angular.equals(val,"false")||angular.equals(val,"no")||angular.equals(val,null)||angular.equals(val,!1)?!1:!0)},this.useClass=function(val){angular.isDefined(val)&&(w=val)},this.useCopy=function(val){angular.isDefined(val)&&(copy=angular.equals(val,0)||angular.equals(val,"false")||angular.equals(val,"no")||angular.equals(val,null)||angular.equals(val,!1)?!1:!0)},this.$get=["$modal",function($modal){return{create:function(url,ctrlr,data,cssClass,backDrop,escKey){return this.useBackdrop(backDrop),this.useEscClose(escKey),this.useClass(cssClass),$modal.open({templateUrl:url,controller:ctrlr,keyboard:k,backdrop:b,windowClass:w,resolve:{data:function(){return copy?angular.copy(data):data}}})}}}]}]).value("defaultStrings",{error:"Error",errorMessage:"An unknown error has occurred.",close:"Close",ok:"OK",yes:"Yes",no:"No",cancel:"Cancel",save:"Save",saveReturn:"Save and Return"});